version: '3.9'


x-environment: &environment
  DJANGO_DEBUG: ${DJANGO_DEBUG:-True}
  DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY:-}
  DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS:-}
  DJANGO_LANGUAGE_CODE: ${DJANGO_LANGUAGE_CODE:-}
  DJANGO_TIME_ZONE: ${DJANGO_TIME_ZONE:-}
  DJANGO_COLLECT_STATIC: ${DJANGO_COLLECT_STATIC:-}
  DJANGO_REST_AUTH_TOKEN_TTL: ${DJANGO_REST_AUTH_TOKEN_TTL:-}
  DJANGO_REST_EXPOSE_AUTH_API: ${DJANGO_REST_EXPOSE_AUTH_API:-}
  DJANGO_BASE_PATH: ${DJANGO_BASE_PATH:-}
  AUTH_DB_URL: ${AUTH_DB_URL:-}
  REDIS_URL: redis://redis:6379
  DATABASE_URL: ${DATABASE_URL:-postgres://grigory:grigory@postgres:5432/grigory}


services:
  postgres:
    image: postgres:12
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - POSTGRES_DB=grigory
      - POSTGRES_USER=grigory
      - POSTGRES_PASSWORD=grigory
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
  django:
    image: anttek/grigory:${TAG:-latest}
    build:
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile}
    depends_on:
      - redis
      - postgres
    environment: *environment
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s
    ports:
      - "${DJANGO_WEB_PORT:-}:8000"
    user: root
    volumes:
      - .:/home/django
  celery:
    image: anttek/grigory:${TAG:-latest}
    command: celery -A core worker -l debug --concurrency 1 -P solo -E
    depends_on:
      django:
        condition: service_healthy
    entrypoint: []
    environment: *environment
    healthcheck:
      test: ["CMD", "celery", "-A", "core", "inspect", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    user: root
    volumes:
      - .:/home/django
  celery-beat:
    image: anttek/grigory:${TAG:-latest}
    command: celery -A core beat -l debug
    depends_on:
      django:
        condition: service_healthy
    entrypoint: []
    environment: *environment
    user: root
    volumes:
      - .:/home/django


volumes:
  postgres_data:
  redis_data: