openapi: 3.0.3
info:
  title: Grigory API
  version: 0.8.4
  description: API for grigory
paths:
  /grigory/api/chats:
    get:
      operationId: chats_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatListList'
          description: ''
    post:
      operationId: chats_create
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chat'
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /grigory/api/chats/{chat_id}/members:
    get:
      operationId: chats_members_list
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChatMemberList'
          description: ''
    post:
      operationId: chats_members_create
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMember'
        required: true
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMember'
          description: ''
  /grigory/api/chats/{chat_id}/members/{id}:
    get:
      operationId: chats_members_retrieve
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat member.
        required: true
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMember'
          description: ''
    put:
      operationId: chats_members_update
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat member.
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChatMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatMember'
        required: true
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMember'
          description: ''
    patch:
      operationId: chats_members_partial_update
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat member.
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChatMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChatMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChatMember'
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMember'
          description: ''
    delete:
      operationId: chats_members_destroy
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat member.
        required: true
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /grigory/api/chats/{chat_id}/messages:
    get:
      operationId: chats_messages_list
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessageList'
          description: ''
    post:
      operationId: chats_messages_create
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
  /grigory/api/chats/{chat_id}/messages/{id}:
    get:
      operationId: chats_messages_retrieve
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Message.
        required: true
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    put:
      operationId: chats_messages_update
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Message.
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Message'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Message'
        required: true
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    patch:
      operationId: chats_messages_partial_update
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Message.
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMessage'
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: ''
    delete:
      operationId: chats_messages_destroy
      parameters:
      - in: path
        name: chat_id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Message.
        required: true
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /grigory/api/chats/{id}:
    get:
      operationId: chats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Chat.
        required: true
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
    put:
      operationId: chats_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Chat.
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Chat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Chat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Chat'
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
    patch:
      operationId: chats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Chat.
        required: true
      tags:
      - chats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChat'
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
    delete:
      operationId: chats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Chat.
        required: true
      tags:
      - chats
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /grigory/api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /grigory/api/users:
    get:
      operationId: users_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - users
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /grigory/api/users/{id}:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - JWTAutoUserCreatingAuthentication: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Attachment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        file:
          type: string
          format: uri
          writeOnly: true
          nullable: true
      required:
      - id
      - url
    BlankEnum:
      enum:
      - ''
    Chat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creator:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        members_count:
          type: integer
          readOnly: true
        chat_type:
          $ref: '#/components/schemas/ChatTypeEnum'
        public:
          type: boolean
        slug:
          type: string
          nullable: true
          pattern: ^[a-zA-Z_]{3,32}$
          maxLength: 32
          minLength: 3
      required:
      - creator
      - id
      - members_count
    ChatList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creator:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        members_count:
          type: integer
          readOnly: true
        last_message:
          type: object
          additionalProperties: {}
          readOnly: true
        chat_type:
          $ref: '#/components/schemas/ChatTypeEnum'
        public:
          type: boolean
        slug:
          type: string
          nullable: true
          pattern: ^[a-zA-Z_]{3,32}$
          maxLength: 32
          minLength: 3
      required:
      - creator
      - id
      - last_message
      - members_count
    ChatMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        chat:
          type: integer
        user:
          type: integer
      required:
      - chat
      - id
      - user
    ChatTypeEnum:
      enum:
      - private
      - group
      type: string
      description: |-
        * `private` - Private
        * `group` - Group
    Message:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sender:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        timestamp:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
        chat:
          type: integer
      required:
      - chat
      - id
      - sender
      - text
      - timestamp
    NullEnum:
      enum:
      - null
    PaginatedChatListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatList'
    PaginatedChatMemberList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ChatMember'
    PaginatedMessageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedChat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        creator:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        members_count:
          type: integer
          readOnly: true
        chat_type:
          allOf:
          - $ref: '#/components/schemas/ChatTypeEnum'
          readOnly: true
        public:
          type: boolean
        slug:
          type: string
          nullable: true
          pattern: ^[a-zA-Z_]{3,32}$
          maxLength: 32
          minLength: 3
    PatchedChatMember:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        chat:
          type: integer
        user:
          type: integer
    PatchedMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        sender:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        timestamp:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
        chat:
          type: integer
    RoleEnum:
      enum:
      - admin
      - moderator
      - member
      type: string
      description: |-
        * `admin` - Admin
        * `moderator` - Moderator
        * `member` - Member
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
  securitySchemes:
    JWTAutoUserCreatingAuthentication:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Bearer"
      scheme: bearer
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
