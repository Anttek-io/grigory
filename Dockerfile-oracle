FROM python:3.10-alpine as instantclient

RUN apk add --no-cache curl

RUN curl -o /tmp/instantclient-basiclite.zip https://download.oracle.com/otn_software/linux/instantclient/instantclient-basiclite-linuxx64.zip -SL && \
    unzip /tmp/instantclient-basiclite.zip -d / && \
    mv /instantclient_* /instantclient

RUN echo -e '\
DIAG_ADR_ENABLED = OFF\n\
TRACE_LEVEL_CLIENT = OFF\n\
TRACE_DIRECTORY_CLIENT=/dev/null\n\
LOG_DIRECTORY_CLIENT = /dev/null\n\
LOG_FILE_CLIENT = /dev/null\n\
LOG_LEVEL_CLIENT = OFF\n\
' > /instantclient/network/admin/sqlnet.ora


FROM python:3.10-alpine as base

RUN addgroup -S -g 1000 django && \
    adduser -S -G django -u 999 django && \
    apk add --no-cache curl libaio libnsl gcompat && \
    ln -sfv ld-linux-x86-64.so.2 /lib/libresolv.so.2 && \
    chown django:django /lib/libresolv.so.2

WORKDIR /home/django


FROM base as wheels

RUN apk add --no-cache gcc musl-dev python3-dev libaio-dev

COPY requirements.txt .

RUN pip wheel --no-cache-dir cx_oracle==8.3.0 -w /wheels && \
    pip wheel --no-cache-dir -r requirements.txt -w /wheels


FROM base as requirements

COPY requirements.txt .

COPY --from=wheels /wheels /wheels

RUN python -m venv /venv && \
    . /venv/bin/activate && \
    pip install --no-cache-dir -U setuptools && \
    pip install --no-cache-dir --no-index --find-links=/wheels cx_oracle==8.3.0 && \
    pip install --no-cache-dir --no-index --find-links=/wheels -r requirements.txt


FROM base as source-code

COPY . .

RUN rm -fr requirements.txt


FROM base

COPY --from=requirements /venv /venv
COPY --from=source-code --chown=django:django /home/django /home/django
COPY --from=instantclient --chown=django:django /instantclient /opt/instantclient

ENV PYTHONUNBUFFERED 1
ENV PATH="/venv/bin:$PATH"
ENV LD_LIBRARY_PATH=/opt/instantclient

USER django

RUN chmod +x /home/django/entrypoint.sh

ENTRYPOINT ["/home/django/entrypoint.sh"]

CMD ["gunicorn"]

EXPOSE 8000
